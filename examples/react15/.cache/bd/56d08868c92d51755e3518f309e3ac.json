{"id":"node_modules/array-tree-filter/index.js","dependencies":[{"name":"/Users/eason/Desktop/micro-frontend/test/examples/react15/package.json","includedInParent":true,"mtime":1565259114444},{"name":"/Users/eason/Desktop/micro-frontend/test/examples/react15/node_modules/array-tree-filter/package.json","includedInParent":true,"mtime":1565313461357}],"generated":{"js":"function arrayTreeFilter(data, filterFn, options) {\n  options = options || {};\n  options.childrenKeyName = options.childrenKeyName || 'children';\n  var children = data || [];\n  var result = [];\n  var level = 0;\n  var foundItem;\n  do {\n    var foundItem = children.filter(function(item) {\n      return filterFn(item, level);\n    })[0];\n    if (!foundItem) {\n      break;\n    }\n    result.push(foundItem);\n    children = foundItem[options.childrenKeyName] || [];\n    level += 1;\n  } while(children.length > 0);\n  return result;\n}\n\nmodule.exports = arrayTreeFilter;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/array-tree-filter/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/array-tree-filter/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}}],"sources":{"node_modules/array-tree-filter/index.js":"function arrayTreeFilter(data, filterFn, options) {\n  options = options || {};\n  options.childrenKeyName = options.childrenKeyName || 'children';\n  var children = data || [];\n  var result = [];\n  var level = 0;\n  var foundItem;\n  do {\n    var foundItem = children.filter(function(item) {\n      return filterFn(item, level);\n    })[0];\n    if (!foundItem) {\n      break;\n    }\n    result.push(foundItem);\n    children = foundItem[options.childrenKeyName] || [];\n    level += 1;\n  } while(children.length > 0);\n  return result;\n}\n\nmodule.exports = arrayTreeFilter;\n"},"lineCount":23}},"error":null,"hash":"cfff2efee2b3d712c959c130af36278f","cacheData":{"env":{}}}