{"id":"node_modules/async-validator/es/rule/range.js","dependencies":[{"name":"/Users/eason/Desktop/micro-frontend/test/examples/react16/package.json","includedInParent":true,"mtime":1565772348768},{"name":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/async-validator/package.json","includedInParent":true,"mtime":1565254620695},{"name":"../util","loc":{"line":7,"column":20},"parent":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/async-validator/es/rule/range.js","resolved":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/async-validator/es/util.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util = require('../util');\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\n/**\n *  Rule for validating minimum and maximum allowed values.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction range(rule, value, source, errors, options) {\n  var len = typeof rule.len === 'number';\n  var min = typeof rule.min === 'number';\n  var max = typeof rule.max === 'number';\n  // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）\n  var spRegexp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  var val = value;\n  var key = null;\n  var num = typeof value === 'number';\n  var str = typeof value === 'string';\n  var arr = Array.isArray(value);\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  }\n  // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n  if (!key) {\n    return false;\n  }\n  if (arr) {\n    val = value.length;\n  }\n  if (str) {\n    // 处理码点大于U+010000的文字length属性不准确的bug，如\"𠮷𠮷𠮷\".lenght !== 3\n    val = value.replace(spRegexp, '_').length;\n  }\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(util.format(options.messages[key].len, rule.fullField, rule.len));\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(util.format(options.messages[key].min, rule.fullField, rule.min));\n  } else if (max && !min && val > rule.max) {\n    errors.push(util.format(options.messages[key].max, rule.fullField, rule.max));\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(util.format(options.messages[key].range, rule.fullField, rule.min, rule.max));\n  }\n}\n\nexports['default'] = range;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/async-validator/es/rule/range.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}}],"sources":{"node_modules/async-validator/es/rule/range.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util = require('../util');\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\n/**\n *  Rule for validating minimum and maximum allowed values.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction range(rule, value, source, errors, options) {\n  var len = typeof rule.len === 'number';\n  var min = typeof rule.min === 'number';\n  var max = typeof rule.max === 'number';\n  // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）\n  var spRegexp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  var val = value;\n  var key = null;\n  var num = typeof value === 'number';\n  var str = typeof value === 'string';\n  var arr = Array.isArray(value);\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  }\n  // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n  if (!key) {\n    return false;\n  }\n  if (arr) {\n    val = value.length;\n  }\n  if (str) {\n    // 处理码点大于U+010000的文字length属性不准确的bug，如\"𠮷𠮷𠮷\".lenght !== 3\n    val = value.replace(spRegexp, '_').length;\n  }\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(util.format(options.messages[key].len, rule.fullField, rule.len));\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(util.format(options.messages[key].min, rule.fullField, rule.min));\n  } else if (max && !min && val > rule.max) {\n    errors.push(util.format(options.messages[key].max, rule.fullField, rule.max));\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(util.format(options.messages[key].range, rule.fullField, rule.min, rule.max));\n  }\n}\n\nexports['default'] = range;"},"lineCount":68}},"error":null,"hash":"51ac82423ef571e54fd04f30f0acb677","cacheData":{"env":{}}}