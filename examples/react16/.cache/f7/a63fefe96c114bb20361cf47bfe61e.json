{"id":"node_modules/fbjs/lib/cx.js","dependencies":[{"name":"/Users/eason/Desktop/micro-frontend/qiankun-master/examples/react16/package.json","includedInParent":true,"mtime":1565035424000},{"name":"/Users/eason/Desktop/micro-frontend/qiankun-master/examples/react16/node_modules/fbjs/package.json","includedInParent":true,"mtime":1565254619418}],"generated":{"js":"'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * This function is used to mark string literals representing CSS class names\n * so that they can be transformed statically. This allows for modularization\n * and minification of CSS class names.\n *\n * In static_upstream, this function is actually implemented, but it should\n * eventually be replaced with something more descriptive, and the transform\n * that is used in the main stack should be ported for use elsewhere.\n *\n * @param string|object className to modularize, or an object of key/values.\n *                      In the object case, the values are conditions that\n *                      determine if the className keys should be included.\n * @param [string ...]  Variable list of classNames in the string case.\n * @return string       Renderable space-separated CSS className.\n */\nfunction cx(classNames) {\n  if (typeof classNames == 'object') {\n    return Object.keys(classNames).filter(function (className) {\n      return classNames[className];\n    }).map(replace).join(' ');\n  }\n  return Array.prototype.map.call(arguments, replace).join(' ');\n}\n\nfunction replace(str) {\n  return str.replace(/\\//g, '-');\n}\n\nmodule.exports = cx;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/fbjs/lib/cx.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}}],"sources":{"node_modules/fbjs/lib/cx.js":"'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * This function is used to mark string literals representing CSS class names\n * so that they can be transformed statically. This allows for modularization\n * and minification of CSS class names.\n *\n * In static_upstream, this function is actually implemented, but it should\n * eventually be replaced with something more descriptive, and the transform\n * that is used in the main stack should be ported for use elsewhere.\n *\n * @param string|object className to modularize, or an object of key/values.\n *                      In the object case, the values are conditions that\n *                      determine if the className keys should be included.\n * @param [string ...]  Variable list of classNames in the string case.\n * @return string       Renderable space-separated CSS className.\n */\nfunction cx(classNames) {\n  if (typeof classNames == 'object') {\n    return Object.keys(classNames).filter(function (className) {\n      return classNames[className];\n    }).map(replace).join(' ');\n  }\n  return Array.prototype.map.call(arguments, replace).join(' ');\n}\n\nfunction replace(str) {\n  return str.replace(/\\//g, '-');\n}\n\nmodule.exports = cx;"},"lineCount":39}},"error":null,"hash":"544fd628d7af278410b82ae7bf4b5e04","cacheData":{"env":{}}}