{"id":"node_modules/draft-js/lib/editOnCopy.js","dependencies":[{"name":"/Users/eason/Desktop/micro-frontend/test/examples/react15/package.json","includedInParent":true,"mtime":1565259114444},{"name":"/Users/eason/Desktop/micro-frontend/test/examples/react15/node_modules/draft-js/package.json","includedInParent":true,"mtime":1565313460061},{"name":"./getFragmentFromSelection","loc":{"line":16,"column":39},"parent":"/Users/eason/Desktop/micro-frontend/test/examples/react15/node_modules/draft-js/lib/editOnCopy.js","resolved":"/Users/eason/Desktop/micro-frontend/test/examples/react15/node_modules/draft-js/lib/getFragmentFromSelection.js"}],"generated":{"js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnCopy\n * @format\n * \n */\n\n'use strict';\n\nvar getFragmentFromSelection = require('./getFragmentFromSelection');\n\n/**\n * If we have a selection, create a ContentState fragment and store\n * it in our internal clipboard. Subsequent paste events will use this\n * fragment if no external clipboard data is supplied.\n */\nfunction editOnCopy(editor, e) {\n  var editorState = editor._latestEditorState;\n  var selection = editorState.getSelection();\n\n  // No selection, so there's nothing to copy.\n  if (selection.isCollapsed()) {\n    e.preventDefault();\n    return;\n  }\n\n  editor.setClipboard(getFragmentFromSelection(editor._latestEditorState));\n}\n\nmodule.exports = editOnCopy;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}}],"sources":{"node_modules/draft-js/lib/editOnCopy.js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnCopy\n * @format\n * \n */\n\n'use strict';\n\nvar getFragmentFromSelection = require('./getFragmentFromSelection');\n\n/**\n * If we have a selection, create a ContentState fragment and store\n * it in our internal clipboard. Subsequent paste events will use this\n * fragment if no external clipboard data is supplied.\n */\nfunction editOnCopy(editor, e) {\n  var editorState = editor._latestEditorState;\n  var selection = editorState.getSelection();\n\n  // No selection, so there's nothing to copy.\n  if (selection.isCollapsed()) {\n    e.preventDefault();\n    return;\n  }\n\n  editor.setClipboard(getFragmentFromSelection(editor._latestEditorState));\n}\n\nmodule.exports = editOnCopy;"},"lineCount":36}},"error":null,"hash":"3ca3d3c2c5408f8155f3ceff652c457b","cacheData":{"env":{}}}