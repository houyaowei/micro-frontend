{"id":"node_modules/async-validator/es/validator/regexp.js","dependencies":[{"name":"/Users/eason/Desktop/micro-frontend/test/examples/react15/package.json","includedInParent":true,"mtime":1565259114444},{"name":"/Users/eason/Desktop/micro-frontend/test/examples/react15/node_modules/async-validator/package.json","includedInParent":true,"mtime":1565313461358},{"name":"../rule/","loc":{"line":7,"column":20},"parent":"/Users/eason/Desktop/micro-frontend/test/examples/react15/node_modules/async-validator/es/validator/regexp.js","resolved":"/Users/eason/Desktop/micro-frontend/test/examples/react15/node_modules/async-validator/es/rule/index.js"},{"name":"../util","loc":{"line":11,"column":20},"parent":"/Users/eason/Desktop/micro-frontend/test/examples/react15/node_modules/async-validator/es/validator/regexp.js","resolved":"/Users/eason/Desktop/micro-frontend/test/examples/react15/node_modules/async-validator/es/util.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _rule = require('../rule/');\n\nvar _rule2 = _interopRequireDefault(_rule);\n\nvar _util = require('../util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n *  Validates the regular expression type.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction regexp(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if ((0, _util.isEmptyValue)(value) && !rule.required) {\n      return callback();\n    }\n    _rule2['default'].required(rule, value, source, errors, options);\n    if (!(0, _util.isEmptyValue)(value)) {\n      _rule2['default'].type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexports['default'] = regexp;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/async-validator/es/validator/regexp.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"node_modules/async-validator/es/validator/regexp.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _rule = require('../rule/');\n\nvar _rule2 = _interopRequireDefault(_rule);\n\nvar _util = require('../util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n *  Validates the regular expression type.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction regexp(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if ((0, _util.isEmptyValue)(value) && !rule.required) {\n      return callback();\n    }\n    _rule2['default'].required(rule, value, source, errors, options);\n    if (!(0, _util.isEmptyValue)(value)) {\n      _rule2['default'].type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexports['default'] = regexp;"},"lineCount":40}},"error":null,"hash":"5de6b115c8d14a7fd24d3e74db6cb203","cacheData":{"env":{}}}