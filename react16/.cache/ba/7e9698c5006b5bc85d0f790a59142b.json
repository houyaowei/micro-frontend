{"id":"node_modules/draft-js/lib/editOnInput.js","dependencies":[{"name":"/Users/eason/Desktop/micro-frontend/test/examples/react16/package.json","includedInParent":true,"mtime":1565772348768},{"name":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/draft-js/package.json","includedInParent":true,"mtime":1565254619337},{"name":"./DraftFeatureFlags","loc":{"line":16,"column":32},"parent":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/draft-js/lib/editOnInput.js","resolved":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/draft-js/lib/DraftFeatureFlags.js"},{"name":"./DraftModifier","loc":{"line":17,"column":28},"parent":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/draft-js/lib/editOnInput.js","resolved":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/draft-js/lib/DraftModifier.js"},{"name":"./DraftOffsetKey","loc":{"line":18,"column":29},"parent":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/draft-js/lib/editOnInput.js","resolved":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/draft-js/lib/DraftOffsetKey.js"},{"name":"./EditorState","loc":{"line":19,"column":26},"parent":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/draft-js/lib/editOnInput.js","resolved":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/draft-js/lib/EditorState.js"},{"name":"fbjs/lib/UserAgent","loc":{"line":20,"column":24},"parent":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/draft-js/lib/editOnInput.js","resolved":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/fbjs/lib/UserAgent.js"},{"name":"./findAncestorOffsetKey","loc":{"line":22,"column":36},"parent":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/draft-js/lib/editOnInput.js","resolved":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/draft-js/lib/findAncestorOffsetKey.js"},{"name":"fbjs/lib/nullthrows","loc":{"line":23,"column":25},"parent":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/draft-js/lib/editOnInput.js","resolved":"/Users/eason/Desktop/micro-frontend/test/examples/react16/node_modules/fbjs/lib/nullthrows.js"}],"generated":{"js":"var global = arguments[3];\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnInput\n * @format\n * \n */\n\n'use strict';\n\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\nvar DraftModifier = require('./DraftModifier');\nvar DraftOffsetKey = require('./DraftOffsetKey');\nvar EditorState = require('./EditorState');\nvar UserAgent = require('fbjs/lib/UserAgent');\n\nvar findAncestorOffsetKey = require('./findAncestorOffsetKey');\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nvar isGecko = UserAgent.isEngine('Gecko');\n\nvar DOUBLE_NEWLINE = '\\n\\n';\n\n/**\n * This function is intended to handle spellcheck and autocorrect changes,\n * which occur in the DOM natively without any opportunity to observe or\n * interpret the changes before they occur.\n *\n * The `input` event fires in contentEditable elements reliably for non-IE\n * browsers, immediately after changes occur to the editor DOM. Since our other\n * handlers override or otherwise handle cover other varieties of text input,\n * the DOM state should match the model in all controlled input cases. Thus,\n * when an `input` change leads to a DOM/model mismatch, the change should be\n * due to a spellcheck change, and we can incorporate it into our model.\n */\nfunction editOnInput(editor) {\n  if (editor._pendingStateFromBeforeInput !== undefined) {\n    editor.update(editor._pendingStateFromBeforeInput);\n    editor._pendingStateFromBeforeInput = undefined;\n  }\n\n  var domSelection = global.getSelection();\n\n  var anchorNode = domSelection.anchorNode,\n      isCollapsed = domSelection.isCollapsed;\n\n  var isNotTextNode = anchorNode.nodeType !== Node.TEXT_NODE;\n  var isNotTextOrElementNode = anchorNode.nodeType !== Node.TEXT_NODE && anchorNode.nodeType !== Node.ELEMENT_NODE;\n\n  if (DraftFeatureFlags.draft_killswitch_allow_nontextnodes) {\n    if (isNotTextNode) {\n      return;\n    }\n  } else {\n    if (isNotTextOrElementNode) {\n      // TODO: (t16149272) figure out context for this change\n      return;\n    }\n  }\n\n  if (anchorNode.nodeType === Node.TEXT_NODE && (anchorNode.previousSibling !== null || anchorNode.nextSibling !== null)) {\n    // When typing at the beginning of a visual line, Chrome splits the text\n    // nodes into two. Why? No one knows. This commit is suspicious:\n    // https://chromium.googlesource.com/chromium/src/+/a3b600981286b135632371477f902214c55a1724\n    // To work around, we'll merge the sibling text nodes back into this one.\n    var span = anchorNode.parentNode;\n    anchorNode.nodeValue = span.textContent;\n    for (var child = span.firstChild; child !== null; child = child.nextSibling) {\n      if (child !== anchorNode) {\n        span.removeChild(child);\n      }\n    }\n  }\n\n  var domText = anchorNode.textContent;\n  var editorState = editor._latestEditorState;\n  var offsetKey = nullthrows(findAncestorOffsetKey(anchorNode));\n\n  var _DraftOffsetKey$decod = DraftOffsetKey.decode(offsetKey),\n      blockKey = _DraftOffsetKey$decod.blockKey,\n      decoratorKey = _DraftOffsetKey$decod.decoratorKey,\n      leafKey = _DraftOffsetKey$decod.leafKey;\n\n  var _editorState$getBlock = editorState.getBlockTree(blockKey).getIn([decoratorKey, 'leaves', leafKey]),\n      start = _editorState$getBlock.start,\n      end = _editorState$getBlock.end;\n\n  var content = editorState.getCurrentContent();\n  var block = content.getBlockForKey(blockKey);\n  var modelText = block.getText().slice(start, end);\n\n  // Special-case soft newlines here. If the DOM text ends in a soft newline,\n  // we will have manually inserted an extra soft newline in DraftEditorLeaf.\n  // We want to remove this extra newline for the purpose of our comparison\n  // of DOM and model text.\n  if (domText.endsWith(DOUBLE_NEWLINE)) {\n    domText = domText.slice(0, -1);\n  }\n\n  // No change -- the DOM is up to date. Nothing to do here.\n  if (domText === modelText) {\n    // This can be buggy for some Android keyboards because they don't fire\n    // standard onkeydown/pressed events and only fired editOnInput\n    // so domText is already changed by the browser and ends up being equal\n    // to modelText unexpectedly\n    return;\n  }\n\n  var selection = editorState.getSelection();\n\n  // We'll replace the entire leaf with the text content of the target.\n  var targetRange = selection.merge({\n    anchorOffset: start,\n    focusOffset: end,\n    isBackward: false\n  });\n\n  var entityKey = block.getEntityAt(start);\n  var entity = entityKey && content.getEntity(entityKey);\n  var entityType = entity && entity.getMutability();\n  var preserveEntity = entityType === 'MUTABLE';\n\n  // Immutable or segmented entities cannot properly be handled by the\n  // default browser undo, so we have to use a different change type to\n  // force using our internal undo method instead of falling through to the\n  // native browser undo.\n  var changeType = preserveEntity ? 'spellcheck-change' : 'apply-entity';\n\n  var newContent = DraftModifier.replaceText(content, targetRange, domText, block.getInlineStyleAt(start), preserveEntity ? block.getEntityAt(start) : null);\n\n  var anchorOffset, focusOffset, startOffset, endOffset;\n\n  if (isGecko) {\n    // Firefox selection does not change while the context menu is open, so\n    // we preserve the anchor and focus values of the DOM selection.\n    anchorOffset = domSelection.anchorOffset;\n    focusOffset = domSelection.focusOffset;\n    startOffset = start + Math.min(anchorOffset, focusOffset);\n    endOffset = startOffset + Math.abs(anchorOffset - focusOffset);\n    anchorOffset = startOffset;\n    focusOffset = endOffset;\n  } else {\n    // Browsers other than Firefox may adjust DOM selection while the context\n    // menu is open, and Safari autocorrect is prone to providing an inaccurate\n    // DOM selection. Don't trust it. Instead, use our existing SelectionState\n    // and adjust it based on the number of characters changed during the\n    // mutation.\n    var charDelta = domText.length - modelText.length;\n    startOffset = selection.getStartOffset();\n    endOffset = selection.getEndOffset();\n\n    anchorOffset = isCollapsed ? endOffset + charDelta : startOffset;\n    focusOffset = endOffset + charDelta;\n  }\n\n  // Segmented entities are completely or partially removed when their\n  // text content changes. For this case we do not want any text to be selected\n  // after the change, so we are not merging the selection.\n  var contentWithAdjustedDOMSelection = newContent.merge({\n    selectionBefore: content.getSelectionAfter(),\n    selectionAfter: selection.merge({ anchorOffset: anchorOffset, focusOffset: focusOffset })\n  });\n\n  editor.update(EditorState.push(editorState, contentWithAdjustedDOMSelection, changeType));\n}\n\nmodule.exports = editOnInput;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/draft-js/lib/editOnInput.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}}],"sources":{"node_modules/draft-js/lib/editOnInput.js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnInput\n * @format\n * \n */\n\n'use strict';\n\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\nvar DraftModifier = require('./DraftModifier');\nvar DraftOffsetKey = require('./DraftOffsetKey');\nvar EditorState = require('./EditorState');\nvar UserAgent = require('fbjs/lib/UserAgent');\n\nvar findAncestorOffsetKey = require('./findAncestorOffsetKey');\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nvar isGecko = UserAgent.isEngine('Gecko');\n\nvar DOUBLE_NEWLINE = '\\n\\n';\n\n/**\n * This function is intended to handle spellcheck and autocorrect changes,\n * which occur in the DOM natively without any opportunity to observe or\n * interpret the changes before they occur.\n *\n * The `input` event fires in contentEditable elements reliably for non-IE\n * browsers, immediately after changes occur to the editor DOM. Since our other\n * handlers override or otherwise handle cover other varieties of text input,\n * the DOM state should match the model in all controlled input cases. Thus,\n * when an `input` change leads to a DOM/model mismatch, the change should be\n * due to a spellcheck change, and we can incorporate it into our model.\n */\nfunction editOnInput(editor) {\n  if (editor._pendingStateFromBeforeInput !== undefined) {\n    editor.update(editor._pendingStateFromBeforeInput);\n    editor._pendingStateFromBeforeInput = undefined;\n  }\n\n  var domSelection = global.getSelection();\n\n  var anchorNode = domSelection.anchorNode,\n      isCollapsed = domSelection.isCollapsed;\n\n  var isNotTextNode = anchorNode.nodeType !== Node.TEXT_NODE;\n  var isNotTextOrElementNode = anchorNode.nodeType !== Node.TEXT_NODE && anchorNode.nodeType !== Node.ELEMENT_NODE;\n\n  if (DraftFeatureFlags.draft_killswitch_allow_nontextnodes) {\n    if (isNotTextNode) {\n      return;\n    }\n  } else {\n    if (isNotTextOrElementNode) {\n      // TODO: (t16149272) figure out context for this change\n      return;\n    }\n  }\n\n  if (anchorNode.nodeType === Node.TEXT_NODE && (anchorNode.previousSibling !== null || anchorNode.nextSibling !== null)) {\n    // When typing at the beginning of a visual line, Chrome splits the text\n    // nodes into two. Why? No one knows. This commit is suspicious:\n    // https://chromium.googlesource.com/chromium/src/+/a3b600981286b135632371477f902214c55a1724\n    // To work around, we'll merge the sibling text nodes back into this one.\n    var span = anchorNode.parentNode;\n    anchorNode.nodeValue = span.textContent;\n    for (var child = span.firstChild; child !== null; child = child.nextSibling) {\n      if (child !== anchorNode) {\n        span.removeChild(child);\n      }\n    }\n  }\n\n  var domText = anchorNode.textContent;\n  var editorState = editor._latestEditorState;\n  var offsetKey = nullthrows(findAncestorOffsetKey(anchorNode));\n\n  var _DraftOffsetKey$decod = DraftOffsetKey.decode(offsetKey),\n      blockKey = _DraftOffsetKey$decod.blockKey,\n      decoratorKey = _DraftOffsetKey$decod.decoratorKey,\n      leafKey = _DraftOffsetKey$decod.leafKey;\n\n  var _editorState$getBlock = editorState.getBlockTree(blockKey).getIn([decoratorKey, 'leaves', leafKey]),\n      start = _editorState$getBlock.start,\n      end = _editorState$getBlock.end;\n\n  var content = editorState.getCurrentContent();\n  var block = content.getBlockForKey(blockKey);\n  var modelText = block.getText().slice(start, end);\n\n  // Special-case soft newlines here. If the DOM text ends in a soft newline,\n  // we will have manually inserted an extra soft newline in DraftEditorLeaf.\n  // We want to remove this extra newline for the purpose of our comparison\n  // of DOM and model text.\n  if (domText.endsWith(DOUBLE_NEWLINE)) {\n    domText = domText.slice(0, -1);\n  }\n\n  // No change -- the DOM is up to date. Nothing to do here.\n  if (domText === modelText) {\n    // This can be buggy for some Android keyboards because they don't fire\n    // standard onkeydown/pressed events and only fired editOnInput\n    // so domText is already changed by the browser and ends up being equal\n    // to modelText unexpectedly\n    return;\n  }\n\n  var selection = editorState.getSelection();\n\n  // We'll replace the entire leaf with the text content of the target.\n  var targetRange = selection.merge({\n    anchorOffset: start,\n    focusOffset: end,\n    isBackward: false\n  });\n\n  var entityKey = block.getEntityAt(start);\n  var entity = entityKey && content.getEntity(entityKey);\n  var entityType = entity && entity.getMutability();\n  var preserveEntity = entityType === 'MUTABLE';\n\n  // Immutable or segmented entities cannot properly be handled by the\n  // default browser undo, so we have to use a different change type to\n  // force using our internal undo method instead of falling through to the\n  // native browser undo.\n  var changeType = preserveEntity ? 'spellcheck-change' : 'apply-entity';\n\n  var newContent = DraftModifier.replaceText(content, targetRange, domText, block.getInlineStyleAt(start), preserveEntity ? block.getEntityAt(start) : null);\n\n  var anchorOffset, focusOffset, startOffset, endOffset;\n\n  if (isGecko) {\n    // Firefox selection does not change while the context menu is open, so\n    // we preserve the anchor and focus values of the DOM selection.\n    anchorOffset = domSelection.anchorOffset;\n    focusOffset = domSelection.focusOffset;\n    startOffset = start + Math.min(anchorOffset, focusOffset);\n    endOffset = startOffset + Math.abs(anchorOffset - focusOffset);\n    anchorOffset = startOffset;\n    focusOffset = endOffset;\n  } else {\n    // Browsers other than Firefox may adjust DOM selection while the context\n    // menu is open, and Safari autocorrect is prone to providing an inaccurate\n    // DOM selection. Don't trust it. Instead, use our existing SelectionState\n    // and adjust it based on the number of characters changed during the\n    // mutation.\n    var charDelta = domText.length - modelText.length;\n    startOffset = selection.getStartOffset();\n    endOffset = selection.getEndOffset();\n\n    anchorOffset = isCollapsed ? endOffset + charDelta : startOffset;\n    focusOffset = endOffset + charDelta;\n  }\n\n  // Segmented entities are completely or partially removed when their\n  // text content changes. For this case we do not want any text to be selected\n  // after the change, so we are not merging the selection.\n  var contentWithAdjustedDOMSelection = newContent.merge({\n    selectionBefore: content.getSelectionAfter(),\n    selectionAfter: selection.merge({ anchorOffset: anchorOffset, focusOffset: focusOffset })\n  });\n\n  editor.update(EditorState.push(editorState, contentWithAdjustedDOMSelection, changeType));\n}\n\nmodule.exports = editOnInput;"},"lineCount":173}},"error":null,"hash":"bfeed58cc092caccb0504c332d44bf49","cacheData":{"env":{}}}